#This code block takes the tidy_reviews dataframe and provides a count of the words per title.
totals <- tidy_reviews %>%
count(Title) %>%
rename(total_words = n)
#Next the totals data frame is joined by Title with the tidy_reviews data frame to form movie_counts which is breaks out each word of the review into its own entry.
movie_counts <- tidy_reviews %>%
left_join(totals, by = "Title")
names(movie_counts)
critic_nrc_sentiment <- movie_counts %>%
inner_join(get_sentiments("nrc"))
critic_nrc_sentiment %>%
count(Title, sentiment, sort = TRUE)
unique(critic_nrc_sentiment$sentiment)
negative_nrc_sentiment <- critic_nrc_sentiment %>%
#Count the total words in each review
count(Title, sentiment, total_words) %>%
ungroup() %>%
#Create a new variable percent which computes the sentiment divideded by the number of words
mutate(percent = n / total_words) %>%
#Filter if the sentiment is negative and the percentage of negative sentiment is equal to or greater than 5%
filter(sentiment == "negative") %>%
filter(percent >= 0.05) %>%
arrange(desc(percent))
NRC_negative_sentiment_Box_Office <- left_join(negative_nrc_sentiment, Movies, by= 'Title')
head(NRC_negative_sentiment_Box_Office,10)
ggplot(NRC_negative_sentiment_Box_Office , aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office")
ggplot(NRC_negative_sentiment_Box_Office , aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office (Zoomed)")+
ylim(c(0,.25))
positive_nrc_sentiment <- critic_nrc_sentiment %>%
count(Title, sentiment, total_words) %>%
ungroup() %>%
mutate(percent = n / total_words) %>%
filter(sentiment == "positive") %>%
filter(percent >= 0.05) %>%
arrange(desc(percent))
NRC_positive_sentiment_Box_Office <- left_join(positive_nrc_sentiment, Movies, by= 'Title')
ggplot(NRC_positive_sentiment_Box_Office , aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point()
ggplot(NRC_positive_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
ylim(c(0,.25))
critic_bing_sentiment <- movie_counts %>%
inner_join(get_sentiments("bing")) %>%
count(Title, Genre, sentiment, sort = TRUE) %>%
ungroup()
BING_negative_sentiment <- critic_bing_sentiment %>%
group_by(Title) %>%
mutate(Total = sum(n), percent = n / Total) %>%
filter(sentiment == "negative") %>%
filter(percent >= 0.05) %>%
arrange(desc(percent))
Bing_negative_sentiment_Box_Office <- left_join(BING_negative_sentiment , Movies, by= c('Title','Genre'))
ggplot(Bing_negative_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office (Bing)")
ggplot(Bing_negative_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office (Bing)") +
ylim(c(0,.25))
BING_positive_sentiment <- critic_bing_sentiment %>%
group_by(Title) %>%
mutate(Total = sum(n), percent = n / Total) %>%
filter(sentiment == "positive") %>%
filter(percent >= 0.05) %>%
arrange(desc(percent))
Bing_positive_sentiment_Box_Office <- left_join(BING_positive_sentiment , Movies, by= c('Title','Genre'))
ggplot(Bing_positive_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Positive Sentiment Percentage", y="Box Office Gross", title="Comparison of Positive Sentiment to Box Office (Bing)")
ggplot(Bing_positive_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Positive Sentiment Percentage", y="Box Office Gross", title="Comparison of Positive Sentiment to Box Office (Bing)") +
ylim(c(0,.25))
critic_bing_sentiment2 <- critic_bing_sentiment %>%
spread(sentiment, n, fill = 0) %>%
mutate(Total_sentiment = positive-negative) %>%
arrange(desc(Total_sentiment))
critic_bing_total_sentiment <- left_join(critic_bing_sentiment2, Movies, by= c('Title','Genre'))
head(critic_bing_total_sentiment,5)
ggplot(critic_bing_total_sentiment, aes(x=Total_sentiment, y=Gross/1000000, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Positive Sentiment Percentage", y="Box Office Gross", title="Comparison of Positive Sentiment to Box Office (Bing)")+
ylim(c(0,.25))
word_counts <- movie_counts %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment)
top_words <- word_counts %>%
group_by(sentiment) %>%
top_n(20) %>%
ungroup() %>%
mutate(word = reorder(word, n))
ggplot(top_words, aes(x=word, y=n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free") +
coord_flip()
critic_afinn_sentiment <- movie_counts %>%
inner_join(get_sentiments("afinn"))
critic_afinn_sentiment_scores <-  critic_afinn_sentiment %>%
group_by(Title) %>%
mutate(Total = sum(score)) %>%
select(Rank,Title,Movie_Studio,ReleaseDate,Genre,MPAA,Gross,Tickets,Critic,total_words,Total) %>%
distinct() %>%
arrange(desc(Total))
head(critic_afinn_sentiment_scores,5)
critic_sentiment_by_genre <- critic_afinn_sentiment_scores %>%
group_by(Genre) %>%
summarise(Total_by_Genre = sum(Total)) %>%
select(Genre, Total_by_Genre) %>%
arrange(desc(Total_by_Genre))
ggplot(data=critic_sentiment_by_genre, aes(x=reorder(Genre, -Total_by_Genre), y=Total_by_Genre)) +
geom_bar(stat="identity", position=position_dodge(),  fill="red") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Genre", y="Sentiment Score by Critic", title="2018 AFINN Total Score by Genre")+
coord_flip()
Gross_by_Genre <- critic_afinn_sentiment_scores %>%
group_by(Genre) %>%
summarise(Genre_Gross = sum(Gross)) %>%
select(Genre, Genre_Gross) %>%
arrange(desc(Genre_Gross))
ggplot(data=Gross_by_Genre, aes(x=reorder(Genre, -Genre_Gross), y=Genre_Gross/1000000)) +
geom_bar(stat="identity", position=position_dodge(), col="green", fill="green") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Genre", y="Box Office Gross (in millions)", title="2018 Box Office Gross by Genre")+
coord_flip()
cor(NRC_negative_sentiment_Box_Office$Gross, NRC_negative_sentiment_Box_Office$percent)
cor(critic_bing_total_sentiment$Gross, critic_bing_total_sentiment$Total_sentiment)
cor(critic_afinn_sentiment_scores$Gross, critic_afinn_sentiment_scores$Total)
Movie_Simple_LR_NRC <- lm(Gross~percent, data = NRC_negative_sentiment_Box_Office)
summary(Movie_Simple_LR_NRC)
Movie_Simple_LR_BING <- lm(Gross~Total_sentiment, data = critic_bing_total_sentiment)
summary(Movie_Simple_LR_BING )
Movie_Simple_LR_AFINN <- lm(Gross~Total, data = critic_afinn_sentiment_scores)
summary(Movie_Simple_LR_AFINN)
library(wordcloud)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
ggplot(data=Movies, aes(x=Genre)) +
geom_bar(stat="count", color="blue", fill="gold") +
geom_text(stat='count', aes(label=..count..), hjust=1.5) +
labs(title="Frequency by Genres in Movies Dataset") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
ggplot(data=Movies, aes(x=Genre)) +
geom_bar(stat="count", color="blue", fill="gold") +
geom_text(stat='count', aes(label=..count..), hjust=1.5) +
labs(title="Frequency by Genres in Movies Dataset") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
dev.copy(png,'genre_freq.png')
dev.off()
critics <- Movies %>%
select(Critic, Genre) %>%
arrange(Critic)
ggplot(data=critics, aes(x = Critic, fill=Genre)) +
geom_bar(stat="count") +
labs(x="NY Times Critics", y="Movie Genres", title="NY Times Critics and Reviewed Genres") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
dev.copy(png,'critics_freq.png')
dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), vjust=-0.5) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")
dev.copy(png,'box_office.png')
dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), vjust=-0.5) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
#dev.copy(png,'box_office.png')
#dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), vjust=-1) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
#dev.copy(png,'box_office.png')
#dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=-1) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
#dev.copy(png,'box_office.png')
#dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=2) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
#dev.copy(png,'box_office.png')
#dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=1.75) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
#dev.copy(png,'box_office.png')
#dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=1.75) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
dev.copy(png,'box_office.png')
dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
#geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=1.75) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")+
coord_flip()
dev.copy(png,'box_office.png')
dev.off()
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
#geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=1.75) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), hjust=1.75) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")
topten <- Movies[Movies$Rank <=10,] %>%
arrange(Gross)
options(scipen=5)
ggplot(data=topten, aes(x=reorder(Title, -Gross), y=Gross, fill=Genre )) +
geom_bar(stat="identity", position=position_dodge()) +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label=paste('$',formatC(Gross, big.mark=',', format = 'f'))), position=position_dodge(width=1), vjust=-0.5) +
labs(x="Movie Title", y="Box Office Gross", title="Top Ten Box Office for 2018")
ggplot(critic_bing_total_sentiment, aes(x=Total_sentiment, y=Gross/1000000, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Positive Sentiment Percentage", y="Box Office Gross", title="Comparison of Positive Sentiment to Box Office (Bing)")+
ylim(c(0,.25))
ggplot(Bing_positive_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Positive Sentiment Percentage", y="Box Office Gross", title="Comparison of Positive Sentiment to Box Office (Bing)") +
ylim(c(0,.25))
ggplot(Bing_negative_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Bing Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office (Bing)") +
ylim(c(0,.25))
ggplot(NRC_positive_sentiment_Box_Office, aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
ylim(c(0,.25))
ggplot(NRC_negative_sentiment_Box_Office , aes(x=percent*100, y=Gross/1000000, fill=sentiment, col=Genre)) +
geom_point() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Negative Sentiment Percentage", y="Box Office Gross", title="Comparison of Negative Sentiment to Box Office (Zoomed)")+
ylim(c(0,.25))
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
install.packages("wordcloud2")
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
png(filename="wc.png")
dev.off()
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
dev.print(png, "wc.png")
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
ggsave("wc.png")
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
png("wordcloud.png", width=1280,height=800)
dev.off()
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500) %>%
png("wordcloud.png", width=1280,height=800) %>%
dev.off()
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n)) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
library(wordcloud2)
library(reshape2)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n))
top25  %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
dev.new(width = 1000, height = 1000, unit = "px")
top25 <- Movies %>%
filter(Rank <= 34) %>%
unnest_tokens(word, Review) %>%
anti_join(stop_words) %>%
distinct() %>%
filter(!word %in% undesirable_words) %>%
filter(nchar(word) > 3) %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
filter(n > 3) %>%
arrange(desc(n))
library(wordcloud2)
library(reshape2)
top25  %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
library(wordcloud2)
library(reshape2)
top25  %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
library(wordcloud2)
library(reshape2)
top25  %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("red", "blue"),
max.words = 500)
